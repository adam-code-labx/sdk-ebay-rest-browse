<?php
/**
 * ItemTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\browse
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Browse API
 *
 * <p>The Browse API has the following resources:</p>   <ul> <li><b>item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters.</li>  <li> <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#API\" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Release\" title=\"Experimental Release\" />&nbsp;(Experimental)</a> <b>search_by_image: </b> Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters.</li>   <li><b>item: </b> Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size. This resource also provides a bridge between the eBay legacy APIs, such as <b>Trading</b> and <b>Finding</b>, and the RESTful APIs, such as <b>Browse</b>, which use different formats for the item IDs. You can use the <b>Browse</b> API to retrieve the basic details of the item and the RESTful item ID using a legacy item ID.</li>    <li><a href=\"https://developer.ebay.com/api-docs/static/versioning.html#API\" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Release\" title=\"Experimental Release\" />&nbsp;(Experimental)</a> <b>shopping_cart: </b> Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp;<b>*Note:* </b> This resource is not available in the eBay API Explorer.</li></ul>       <p>The <b>item_summary</b>, <b>search_by_image</b>, and <b>item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>. The <b>shopping_cart</b> resource calls require a <a href=\"/api-docs/static/oauth-authorization-code-grant.html\">User access token</a>.</p>
 *
 * The version of the OpenAPI document: v1_beta.19.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace macropage\SDKs\ebay\rest\browse;

use PHPUnit\Framework\TestCase;

/**
 * ItemTest Class Doc Comment
 *
 * @category    Class
 * @description Type that defines the fields for the item details for a specific item.
 * @package     macropage\SDKs\ebay\rest\browse
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ItemTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Item"
     */
    public function testItem()
    {
    }

    /**
     * Test attribute "additionalImages"
     */
    public function testPropertyAdditionalImages()
    {
    }

    /**
     * Test attribute "adultOnly"
     */
    public function testPropertyAdultOnly()
    {
    }

    /**
     * Test attribute "ageGroup"
     */
    public function testPropertyAgeGroup()
    {
    }

    /**
     * Test attribute "bidCount"
     */
    public function testPropertyBidCount()
    {
    }

    /**
     * Test attribute "brand"
     */
    public function testPropertyBrand()
    {
    }

    /**
     * Test attribute "buyingOptions"
     */
    public function testPropertyBuyingOptions()
    {
    }

    /**
     * Test attribute "categoryId"
     */
    public function testPropertyCategoryId()
    {
    }

    /**
     * Test attribute "categoryPath"
     */
    public function testPropertyCategoryPath()
    {
    }

    /**
     * Test attribute "color"
     */
    public function testPropertyColor()
    {
    }

    /**
     * Test attribute "condition"
     */
    public function testPropertyCondition()
    {
    }

    /**
     * Test attribute "conditionId"
     */
    public function testPropertyConditionId()
    {
    }

    /**
     * Test attribute "currentBidPrice"
     */
    public function testPropertyCurrentBidPrice()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "enabledForGuestCheckout"
     */
    public function testPropertyEnabledForGuestCheckout()
    {
    }

    /**
     * Test attribute "energyEfficiencyClass"
     */
    public function testPropertyEnergyEfficiencyClass()
    {
    }

    /**
     * Test attribute "epid"
     */
    public function testPropertyEpid()
    {
    }

    /**
     * Test attribute "estimatedAvailabilities"
     */
    public function testPropertyEstimatedAvailabilities()
    {
    }

    /**
     * Test attribute "gender"
     */
    public function testPropertyGender()
    {
    }

    /**
     * Test attribute "gtin"
     */
    public function testPropertyGtin()
    {
    }

    /**
     * Test attribute "image"
     */
    public function testPropertyImage()
    {
    }

    /**
     * Test attribute "itemAffiliateWebUrl"
     */
    public function testPropertyItemAffiliateWebUrl()
    {
    }

    /**
     * Test attribute "itemEndDate"
     */
    public function testPropertyItemEndDate()
    {
    }

    /**
     * Test attribute "itemId"
     */
    public function testPropertyItemId()
    {
    }

    /**
     * Test attribute "itemLocation"
     */
    public function testPropertyItemLocation()
    {
    }

    /**
     * Test attribute "itemWebUrl"
     */
    public function testPropertyItemWebUrl()
    {
    }

    /**
     * Test attribute "localizedAspects"
     */
    public function testPropertyLocalizedAspects()
    {
    }

    /**
     * Test attribute "marketingPrice"
     */
    public function testPropertyMarketingPrice()
    {
    }

    /**
     * Test attribute "material"
     */
    public function testPropertyMaterial()
    {
    }

    /**
     * Test attribute "minimumPriceToBid"
     */
    public function testPropertyMinimumPriceToBid()
    {
    }

    /**
     * Test attribute "mpn"
     */
    public function testPropertyMpn()
    {
    }

    /**
     * Test attribute "pattern"
     */
    public function testPropertyPattern()
    {
    }

    /**
     * Test attribute "price"
     */
    public function testPropertyPrice()
    {
    }

    /**
     * Test attribute "priceDisplayCondition"
     */
    public function testPropertyPriceDisplayCondition()
    {
    }

    /**
     * Test attribute "primaryItemGroup"
     */
    public function testPropertyPrimaryItemGroup()
    {
    }

    /**
     * Test attribute "primaryProductReviewRating"
     */
    public function testPropertyPrimaryProductReviewRating()
    {
    }

    /**
     * Test attribute "product"
     */
    public function testPropertyProduct()
    {
    }

    /**
     * Test attribute "productFicheWebUrl"
     */
    public function testPropertyProductFicheWebUrl()
    {
    }

    /**
     * Test attribute "quantityLimitPerBuyer"
     */
    public function testPropertyQuantityLimitPerBuyer()
    {
    }

    /**
     * Test attribute "reservePriceMet"
     */
    public function testPropertyReservePriceMet()
    {
    }

    /**
     * Test attribute "returnTerms"
     */
    public function testPropertyReturnTerms()
    {
    }

    /**
     * Test attribute "seller"
     */
    public function testPropertySeller()
    {
    }

    /**
     * Test attribute "sellerItemRevision"
     */
    public function testPropertySellerItemRevision()
    {
    }

    /**
     * Test attribute "shippingOptions"
     */
    public function testPropertyShippingOptions()
    {
    }

    /**
     * Test attribute "shipToLocations"
     */
    public function testPropertyShipToLocations()
    {
    }

    /**
     * Test attribute "shortDescription"
     */
    public function testPropertyShortDescription()
    {
    }

    /**
     * Test attribute "size"
     */
    public function testPropertySize()
    {
    }

    /**
     * Test attribute "sizeSystem"
     */
    public function testPropertySizeSystem()
    {
    }

    /**
     * Test attribute "sizeType"
     */
    public function testPropertySizeType()
    {
    }

    /**
     * Test attribute "subtitle"
     */
    public function testPropertySubtitle()
    {
    }

    /**
     * Test attribute "taxes"
     */
    public function testPropertyTaxes()
    {
    }

    /**
     * Test attribute "title"
     */
    public function testPropertyTitle()
    {
    }

    /**
     * Test attribute "topRatedBuyingExperience"
     */
    public function testPropertyTopRatedBuyingExperience()
    {
    }

    /**
     * Test attribute "uniqueBidderCount"
     */
    public function testPropertyUniqueBidderCount()
    {
    }

    /**
     * Test attribute "unitPrice"
     */
    public function testPropertyUnitPrice()
    {
    }

    /**
     * Test attribute "unitPricingMeasure"
     */
    public function testPropertyUnitPricingMeasure()
    {
    }

    /**
     * Test attribute "warnings"
     */
    public function testPropertyWarnings()
    {
    }
}
