<?php
/**
 * Item
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\browse
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Browse API
 *
 * <p>The Browse API has the following resources:</p>   <ul> <li><b>item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, or item aspects and refine the results by using filters.</li>  <li> <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#API\" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Release\" title=\"Experimental Release\" />&nbsp;(Experimental)</a> <b>search_by_image: </b> Lets shoppers search for specific items by image. You can refine the results by using URI parameters and filters.</li>   <li><b>item: </b> Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size. This resource also provides a bridge between the eBay legacy APIs, such as <b>Trading</b> and <b>Finding</b>, and the RESTful APIs, such as <b>Browse</b>, which use different formats for the item IDs. You can use the <b>Browse</b> API to retrieve the basic details of the item and the RESTful item ID using a legacy item ID.</li>    <li><a href=\"https://developer.ebay.com/api-docs/static/versioning.html#API\" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Release\" title=\"Experimental Release\" />&nbsp;(Experimental)</a> <b>shopping_cart: </b> Provides the ability for eBay members to see the contents of their eBay cart, and add, remove, and change the quantity of items in their eBay cart.&nbsp;&nbsp;<b>*Note:* </b> This resource is not available in the eBay API Explorer.</li></ul>       <p>The <b>item_summary</b>, <b>search_by_image</b>, and <b>item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>. The <b>shopping_cart</b> resource calls require a <a href=\"/api-docs/static/oauth-authorization-code-grant.html\">User access token</a>.</p>
 *
 * The version of the OpenAPI document: v1_beta.19.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace macropage\SDKs\ebay\rest\browse\Model;

use \ArrayAccess;
use \macropage\SDKs\ebay\rest\browse\ObjectSerializer;

/**
 * Item Class Doc Comment
 *
 * @category Class
 * @description Type that defines the fields for the item details for a specific item.
 * @package  macropage\SDKs\ebay\rest\browse
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Item implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Item';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'additionalImages' => '\macropage\SDKs\ebay\rest\browse\Model\Image[]',
        'adultOnly' => 'bool',
        'ageGroup' => 'string',
        'bidCount' => 'int',
        'brand' => 'string',
        'buyingOptions' => 'string[]',
        'categoryId' => 'string',
        'categoryPath' => 'string',
        'color' => 'string',
        'condition' => 'string',
        'conditionId' => 'string',
        'currentBidPrice' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'description' => 'string',
        'enabledForGuestCheckout' => 'bool',
        'energyEfficiencyClass' => 'string',
        'epid' => 'string',
        'estimatedAvailabilities' => '\macropage\SDKs\ebay\rest\browse\Model\EstimatedAvailability[]',
        'gender' => 'string',
        'gtin' => 'string',
        'image' => '\macropage\SDKs\ebay\rest\browse\Model\Image',
        'itemAffiliateWebUrl' => 'string',
        'itemEndDate' => 'string',
        'itemId' => 'string',
        'itemLocation' => '\macropage\SDKs\ebay\rest\browse\Model\Address',
        'itemWebUrl' => 'string',
        'localizedAspects' => '\macropage\SDKs\ebay\rest\browse\Model\TypedNameValue[]',
        'marketingPrice' => '\macropage\SDKs\ebay\rest\browse\Model\MarketingPrice',
        'material' => 'string',
        'minimumPriceToBid' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'mpn' => 'string',
        'pattern' => 'string',
        'price' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'priceDisplayCondition' => '\macropage\SDKs\ebay\rest\browse\Model\PriceDisplayConditionEnum',
        'primaryItemGroup' => '\macropage\SDKs\ebay\rest\browse\Model\ItemGroupSummary',
        'primaryProductReviewRating' => '\macropage\SDKs\ebay\rest\browse\Model\ReviewRating',
        'product' => '\macropage\SDKs\ebay\rest\browse\Model\Product',
        'productFicheWebUrl' => 'string',
        'quantityLimitPerBuyer' => 'int',
        'reservePriceMet' => 'bool',
        'returnTerms' => '\macropage\SDKs\ebay\rest\browse\Model\ItemReturnTerms',
        'seller' => '\macropage\SDKs\ebay\rest\browse\Model\SellerDetail',
        'sellerItemRevision' => 'string',
        'shippingOptions' => '\macropage\SDKs\ebay\rest\browse\Model\ShippingOption[]',
        'shipToLocations' => '\macropage\SDKs\ebay\rest\browse\Model\ShipToLocations',
        'shortDescription' => 'string',
        'size' => 'string',
        'sizeSystem' => 'string',
        'sizeType' => 'string',
        'subtitle' => 'string',
        'taxes' => '\macropage\SDKs\ebay\rest\browse\Model\Taxes[]',
        'title' => 'string',
        'topRatedBuyingExperience' => 'bool',
        'uniqueBidderCount' => 'int',
        'unitPrice' => '\macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount',
        'unitPricingMeasure' => 'string',
        'warnings' => '\macropage\SDKs\ebay\rest\browse\Model\ErrorDetailV3[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'additionalImages' => null,
        'adultOnly' => null,
        'ageGroup' => null,
        'bidCount' => 'int32',
        'brand' => null,
        'buyingOptions' => null,
        'categoryId' => null,
        'categoryPath' => null,
        'color' => null,
        'condition' => null,
        'conditionId' => null,
        'currentBidPrice' => null,
        'description' => null,
        'enabledForGuestCheckout' => null,
        'energyEfficiencyClass' => null,
        'epid' => null,
        'estimatedAvailabilities' => null,
        'gender' => null,
        'gtin' => null,
        'image' => null,
        'itemAffiliateWebUrl' => null,
        'itemEndDate' => null,
        'itemId' => null,
        'itemLocation' => null,
        'itemWebUrl' => null,
        'localizedAspects' => null,
        'marketingPrice' => null,
        'material' => null,
        'minimumPriceToBid' => null,
        'mpn' => null,
        'pattern' => null,
        'price' => null,
        'priceDisplayCondition' => null,
        'primaryItemGroup' => null,
        'primaryProductReviewRating' => null,
        'product' => null,
        'productFicheWebUrl' => null,
        'quantityLimitPerBuyer' => 'int32',
        'reservePriceMet' => null,
        'returnTerms' => null,
        'seller' => null,
        'sellerItemRevision' => null,
        'shippingOptions' => null,
        'shipToLocations' => null,
        'shortDescription' => null,
        'size' => null,
        'sizeSystem' => null,
        'sizeType' => null,
        'subtitle' => null,
        'taxes' => null,
        'title' => null,
        'topRatedBuyingExperience' => null,
        'uniqueBidderCount' => 'int32',
        'unitPrice' => null,
        'unitPricingMeasure' => null,
        'warnings' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'additionalImages' => 'additionalImages',
        'adultOnly' => 'adultOnly',
        'ageGroup' => 'ageGroup',
        'bidCount' => 'bidCount',
        'brand' => 'brand',
        'buyingOptions' => 'buyingOptions',
        'categoryId' => 'categoryId',
        'categoryPath' => 'categoryPath',
        'color' => 'color',
        'condition' => 'condition',
        'conditionId' => 'conditionId',
        'currentBidPrice' => 'currentBidPrice',
        'description' => 'description',
        'enabledForGuestCheckout' => 'enabledForGuestCheckout',
        'energyEfficiencyClass' => 'energyEfficiencyClass',
        'epid' => 'epid',
        'estimatedAvailabilities' => 'estimatedAvailabilities',
        'gender' => 'gender',
        'gtin' => 'gtin',
        'image' => 'image',
        'itemAffiliateWebUrl' => 'itemAffiliateWebUrl',
        'itemEndDate' => 'itemEndDate',
        'itemId' => 'itemId',
        'itemLocation' => 'itemLocation',
        'itemWebUrl' => 'itemWebUrl',
        'localizedAspects' => 'localizedAspects',
        'marketingPrice' => 'marketingPrice',
        'material' => 'material',
        'minimumPriceToBid' => 'minimumPriceToBid',
        'mpn' => 'mpn',
        'pattern' => 'pattern',
        'price' => 'price',
        'priceDisplayCondition' => 'priceDisplayCondition',
        'primaryItemGroup' => 'primaryItemGroup',
        'primaryProductReviewRating' => 'primaryProductReviewRating',
        'product' => 'product',
        'productFicheWebUrl' => 'productFicheWebUrl',
        'quantityLimitPerBuyer' => 'quantityLimitPerBuyer',
        'reservePriceMet' => 'reservePriceMet',
        'returnTerms' => 'returnTerms',
        'seller' => 'seller',
        'sellerItemRevision' => 'sellerItemRevision',
        'shippingOptions' => 'shippingOptions',
        'shipToLocations' => 'shipToLocations',
        'shortDescription' => 'shortDescription',
        'size' => 'size',
        'sizeSystem' => 'sizeSystem',
        'sizeType' => 'sizeType',
        'subtitle' => 'subtitle',
        'taxes' => 'taxes',
        'title' => 'title',
        'topRatedBuyingExperience' => 'topRatedBuyingExperience',
        'uniqueBidderCount' => 'uniqueBidderCount',
        'unitPrice' => 'unitPrice',
        'unitPricingMeasure' => 'unitPricingMeasure',
        'warnings' => 'warnings'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'additionalImages' => 'setAdditionalImages',
        'adultOnly' => 'setAdultOnly',
        'ageGroup' => 'setAgeGroup',
        'bidCount' => 'setBidCount',
        'brand' => 'setBrand',
        'buyingOptions' => 'setBuyingOptions',
        'categoryId' => 'setCategoryId',
        'categoryPath' => 'setCategoryPath',
        'color' => 'setColor',
        'condition' => 'setCondition',
        'conditionId' => 'setConditionId',
        'currentBidPrice' => 'setCurrentBidPrice',
        'description' => 'setDescription',
        'enabledForGuestCheckout' => 'setEnabledForGuestCheckout',
        'energyEfficiencyClass' => 'setEnergyEfficiencyClass',
        'epid' => 'setEpid',
        'estimatedAvailabilities' => 'setEstimatedAvailabilities',
        'gender' => 'setGender',
        'gtin' => 'setGtin',
        'image' => 'setImage',
        'itemAffiliateWebUrl' => 'setItemAffiliateWebUrl',
        'itemEndDate' => 'setItemEndDate',
        'itemId' => 'setItemId',
        'itemLocation' => 'setItemLocation',
        'itemWebUrl' => 'setItemWebUrl',
        'localizedAspects' => 'setLocalizedAspects',
        'marketingPrice' => 'setMarketingPrice',
        'material' => 'setMaterial',
        'minimumPriceToBid' => 'setMinimumPriceToBid',
        'mpn' => 'setMpn',
        'pattern' => 'setPattern',
        'price' => 'setPrice',
        'priceDisplayCondition' => 'setPriceDisplayCondition',
        'primaryItemGroup' => 'setPrimaryItemGroup',
        'primaryProductReviewRating' => 'setPrimaryProductReviewRating',
        'product' => 'setProduct',
        'productFicheWebUrl' => 'setProductFicheWebUrl',
        'quantityLimitPerBuyer' => 'setQuantityLimitPerBuyer',
        'reservePriceMet' => 'setReservePriceMet',
        'returnTerms' => 'setReturnTerms',
        'seller' => 'setSeller',
        'sellerItemRevision' => 'setSellerItemRevision',
        'shippingOptions' => 'setShippingOptions',
        'shipToLocations' => 'setShipToLocations',
        'shortDescription' => 'setShortDescription',
        'size' => 'setSize',
        'sizeSystem' => 'setSizeSystem',
        'sizeType' => 'setSizeType',
        'subtitle' => 'setSubtitle',
        'taxes' => 'setTaxes',
        'title' => 'setTitle',
        'topRatedBuyingExperience' => 'setTopRatedBuyingExperience',
        'uniqueBidderCount' => 'setUniqueBidderCount',
        'unitPrice' => 'setUnitPrice',
        'unitPricingMeasure' => 'setUnitPricingMeasure',
        'warnings' => 'setWarnings'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'additionalImages' => 'getAdditionalImages',
        'adultOnly' => 'getAdultOnly',
        'ageGroup' => 'getAgeGroup',
        'bidCount' => 'getBidCount',
        'brand' => 'getBrand',
        'buyingOptions' => 'getBuyingOptions',
        'categoryId' => 'getCategoryId',
        'categoryPath' => 'getCategoryPath',
        'color' => 'getColor',
        'condition' => 'getCondition',
        'conditionId' => 'getConditionId',
        'currentBidPrice' => 'getCurrentBidPrice',
        'description' => 'getDescription',
        'enabledForGuestCheckout' => 'getEnabledForGuestCheckout',
        'energyEfficiencyClass' => 'getEnergyEfficiencyClass',
        'epid' => 'getEpid',
        'estimatedAvailabilities' => 'getEstimatedAvailabilities',
        'gender' => 'getGender',
        'gtin' => 'getGtin',
        'image' => 'getImage',
        'itemAffiliateWebUrl' => 'getItemAffiliateWebUrl',
        'itemEndDate' => 'getItemEndDate',
        'itemId' => 'getItemId',
        'itemLocation' => 'getItemLocation',
        'itemWebUrl' => 'getItemWebUrl',
        'localizedAspects' => 'getLocalizedAspects',
        'marketingPrice' => 'getMarketingPrice',
        'material' => 'getMaterial',
        'minimumPriceToBid' => 'getMinimumPriceToBid',
        'mpn' => 'getMpn',
        'pattern' => 'getPattern',
        'price' => 'getPrice',
        'priceDisplayCondition' => 'getPriceDisplayCondition',
        'primaryItemGroup' => 'getPrimaryItemGroup',
        'primaryProductReviewRating' => 'getPrimaryProductReviewRating',
        'product' => 'getProduct',
        'productFicheWebUrl' => 'getProductFicheWebUrl',
        'quantityLimitPerBuyer' => 'getQuantityLimitPerBuyer',
        'reservePriceMet' => 'getReservePriceMet',
        'returnTerms' => 'getReturnTerms',
        'seller' => 'getSeller',
        'sellerItemRevision' => 'getSellerItemRevision',
        'shippingOptions' => 'getShippingOptions',
        'shipToLocations' => 'getShipToLocations',
        'shortDescription' => 'getShortDescription',
        'size' => 'getSize',
        'sizeSystem' => 'getSizeSystem',
        'sizeType' => 'getSizeType',
        'subtitle' => 'getSubtitle',
        'taxes' => 'getTaxes',
        'title' => 'getTitle',
        'topRatedBuyingExperience' => 'getTopRatedBuyingExperience',
        'uniqueBidderCount' => 'getUniqueBidderCount',
        'unitPrice' => 'getUnitPrice',
        'unitPricingMeasure' => 'getUnitPricingMeasure',
        'warnings' => 'getWarnings'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['additionalImages'] = isset($data['additionalImages']) ? $data['additionalImages'] : null;
        $this->container['adultOnly'] = isset($data['adultOnly']) ? $data['adultOnly'] : null;
        $this->container['ageGroup'] = isset($data['ageGroup']) ? $data['ageGroup'] : null;
        $this->container['bidCount'] = isset($data['bidCount']) ? $data['bidCount'] : null;
        $this->container['brand'] = isset($data['brand']) ? $data['brand'] : null;
        $this->container['buyingOptions'] = isset($data['buyingOptions']) ? $data['buyingOptions'] : null;
        $this->container['categoryId'] = isset($data['categoryId']) ? $data['categoryId'] : null;
        $this->container['categoryPath'] = isset($data['categoryPath']) ? $data['categoryPath'] : null;
        $this->container['color'] = isset($data['color']) ? $data['color'] : null;
        $this->container['condition'] = isset($data['condition']) ? $data['condition'] : null;
        $this->container['conditionId'] = isset($data['conditionId']) ? $data['conditionId'] : null;
        $this->container['currentBidPrice'] = isset($data['currentBidPrice']) ? $data['currentBidPrice'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['enabledForGuestCheckout'] = isset($data['enabledForGuestCheckout']) ? $data['enabledForGuestCheckout'] : null;
        $this->container['energyEfficiencyClass'] = isset($data['energyEfficiencyClass']) ? $data['energyEfficiencyClass'] : null;
        $this->container['epid'] = isset($data['epid']) ? $data['epid'] : null;
        $this->container['estimatedAvailabilities'] = isset($data['estimatedAvailabilities']) ? $data['estimatedAvailabilities'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['gtin'] = isset($data['gtin']) ? $data['gtin'] : null;
        $this->container['image'] = isset($data['image']) ? $data['image'] : null;
        $this->container['itemAffiliateWebUrl'] = isset($data['itemAffiliateWebUrl']) ? $data['itemAffiliateWebUrl'] : null;
        $this->container['itemEndDate'] = isset($data['itemEndDate']) ? $data['itemEndDate'] : null;
        $this->container['itemId'] = isset($data['itemId']) ? $data['itemId'] : null;
        $this->container['itemLocation'] = isset($data['itemLocation']) ? $data['itemLocation'] : null;
        $this->container['itemWebUrl'] = isset($data['itemWebUrl']) ? $data['itemWebUrl'] : null;
        $this->container['localizedAspects'] = isset($data['localizedAspects']) ? $data['localizedAspects'] : null;
        $this->container['marketingPrice'] = isset($data['marketingPrice']) ? $data['marketingPrice'] : null;
        $this->container['material'] = isset($data['material']) ? $data['material'] : null;
        $this->container['minimumPriceToBid'] = isset($data['minimumPriceToBid']) ? $data['minimumPriceToBid'] : null;
        $this->container['mpn'] = isset($data['mpn']) ? $data['mpn'] : null;
        $this->container['pattern'] = isset($data['pattern']) ? $data['pattern'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['priceDisplayCondition'] = isset($data['priceDisplayCondition']) ? $data['priceDisplayCondition'] : null;
        $this->container['primaryItemGroup'] = isset($data['primaryItemGroup']) ? $data['primaryItemGroup'] : null;
        $this->container['primaryProductReviewRating'] = isset($data['primaryProductReviewRating']) ? $data['primaryProductReviewRating'] : null;
        $this->container['product'] = isset($data['product']) ? $data['product'] : null;
        $this->container['productFicheWebUrl'] = isset($data['productFicheWebUrl']) ? $data['productFicheWebUrl'] : null;
        $this->container['quantityLimitPerBuyer'] = isset($data['quantityLimitPerBuyer']) ? $data['quantityLimitPerBuyer'] : null;
        $this->container['reservePriceMet'] = isset($data['reservePriceMet']) ? $data['reservePriceMet'] : null;
        $this->container['returnTerms'] = isset($data['returnTerms']) ? $data['returnTerms'] : null;
        $this->container['seller'] = isset($data['seller']) ? $data['seller'] : null;
        $this->container['sellerItemRevision'] = isset($data['sellerItemRevision']) ? $data['sellerItemRevision'] : null;
        $this->container['shippingOptions'] = isset($data['shippingOptions']) ? $data['shippingOptions'] : null;
        $this->container['shipToLocations'] = isset($data['shipToLocations']) ? $data['shipToLocations'] : null;
        $this->container['shortDescription'] = isset($data['shortDescription']) ? $data['shortDescription'] : null;
        $this->container['size'] = isset($data['size']) ? $data['size'] : null;
        $this->container['sizeSystem'] = isset($data['sizeSystem']) ? $data['sizeSystem'] : null;
        $this->container['sizeType'] = isset($data['sizeType']) ? $data['sizeType'] : null;
        $this->container['subtitle'] = isset($data['subtitle']) ? $data['subtitle'] : null;
        $this->container['taxes'] = isset($data['taxes']) ? $data['taxes'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['topRatedBuyingExperience'] = isset($data['topRatedBuyingExperience']) ? $data['topRatedBuyingExperience'] : null;
        $this->container['uniqueBidderCount'] = isset($data['uniqueBidderCount']) ? $data['uniqueBidderCount'] : null;
        $this->container['unitPrice'] = isset($data['unitPrice']) ? $data['unitPrice'] : null;
        $this->container['unitPricingMeasure'] = isset($data['unitPricingMeasure']) ? $data['unitPricingMeasure'] : null;
        $this->container['warnings'] = isset($data['warnings']) ? $data['warnings'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets additionalImages
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Image[]|null
     */
    public function getAdditionalImages()
    {
        return $this->container['additionalImages'];
    }

    /**
     * Sets additionalImages
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Image[]|null $additionalImages An array of containers with the URLs for the images that are in addition to the primary image. The primary image is returned in the image.imageUrl field.
     *
     * @return $this
     */
    public function setAdditionalImages($additionalImages)
    {
        $this->container['additionalImages'] = $additionalImages;

        return $this;
    }

    /**
     * Gets adultOnly
     *
     * @return bool|null
     */
    public function getAdultOnly()
    {
        return $this->container['adultOnly'];
    }

    /**
     * Sets adultOnly
     *
     * @param bool|null $adultOnly This indicates if the item is for adults only. For more information about adult-only items on eBay, see Adult items policy for sellers and Adult-Only items on eBay for buyers.
     *
     * @return $this
     */
    public function setAdultOnly($adultOnly)
    {
        $this->container['adultOnly'] = $adultOnly;

        return $this;
    }

    /**
     * Gets ageGroup
     *
     * @return string|null
     */
    public function getAgeGroup()
    {
        return $this->container['ageGroup'];
    }

    /**
     * Sets ageGroup
     *
     * @param string|null $ageGroup (Primary Item Aspect) The age group for which the product is recommended. For example, newborn, infant, toddler, kids, adult, etc. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setAgeGroup($ageGroup)
    {
        $this->container['ageGroup'] = $ageGroup;

        return $this;
    }

    /**
     * Gets bidCount
     *
     * @return int|null
     */
    public function getBidCount()
    {
        return $this->container['bidCount'];
    }

    /**
     * Sets bidCount
     *
     * @param int|null $bidCount This integer value indicates the total number of bids that have been placed against an auction item. This field is returned only for auction items.
     *
     * @return $this
     */
    public function setBidCount($bidCount)
    {
        $this->container['bidCount'] = $bidCount;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string|null
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string|null $brand (Primary Item Aspect) The name brand of the item, such as Nike, Apple, etc. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets buyingOptions
     *
     * @return string[]|null
     */
    public function getBuyingOptions()
    {
        return $this->container['buyingOptions'];
    }

    /**
     * Sets buyingOptions
     *
     * @param string[]|null $buyingOptions A comma separated list of the purchase options available for the item, such as FIXED_PRICE, AUCTION. FIXED_PRICE - Returned for fixed-price items (non-auction) AUCTION - Returned for auction items without Buy It Now feature FIXED_PRICE and AUCTION - Returned for auction items enabled with the Buy It Now feature Code so that your app gracefully handles any future changes to this list.
     *
     * @return $this
     */
    public function setBuyingOptions($buyingOptions)
    {
        $this->container['buyingOptions'] = $buyingOptions;

        return $this;
    }

    /**
     * Gets categoryId
     *
     * @return string|null
     */
    public function getCategoryId()
    {
        return $this->container['categoryId'];
    }

    /**
     * Sets categoryId
     *
     * @param string|null $categoryId The ID of the leaf category for this item. A left category is the lowest level in the category tree. This category has no children.
     *
     * @return $this
     */
    public function setCategoryId($categoryId)
    {
        $this->container['categoryId'] = $categoryId;

        return $this;
    }

    /**
     * Gets categoryPath
     *
     * @return string|null
     */
    public function getCategoryPath()
    {
        return $this->container['categoryPath'];
    }

    /**
     * Sets categoryPath
     *
     * @param string|null $categoryPath Text that shows the category hierarchy of the item. For example: Computers/Tablets &amp; Networking, Laptops &amp; Netbooks, PC Laptops &amp; Netbooks
     *
     * @return $this
     */
    public function setCategoryPath($categoryPath)
    {
        $this->container['categoryPath'] = $categoryPath;

        return $this;
    }

    /**
     * Gets color
     *
     * @return string|null
     */
    public function getColor()
    {
        return $this->container['color'];
    }

    /**
     * Sets color
     *
     * @param string|null $color (Primary Item Aspect) Text describing the color of the item. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setColor($color)
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets condition
     *
     * @return string|null
     */
    public function getCondition()
    {
        return $this->container['condition'];
    }

    /**
     * Sets condition
     *
     * @param string|null $condition The text describing the condition of the item, such as New or Used. For a list of condition names, see Item Condition IDs and Names. Code so that your app gracefully handles any future changes to this list.
     *
     * @return $this
     */
    public function setCondition($condition)
    {
        $this->container['condition'] = $condition;

        return $this;
    }

    /**
     * Gets conditionId
     *
     * @return string|null
     */
    public function getConditionId()
    {
        return $this->container['conditionId'];
    }

    /**
     * Sets conditionId
     *
     * @param string|null $conditionId The identifier of the condition of the item. For example, 1000 is the identifier for NEW. For a list of condition names and IDs, see Item Condition IDs and Names. Code so that your app gracefully handles any future changes to this list.
     *
     * @return $this
     */
    public function setConditionId($conditionId)
    {
        $this->container['conditionId'] = $conditionId;

        return $this;
    }

    /**
     * Gets currentBidPrice
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getCurrentBidPrice()
    {
        return $this->container['currentBidPrice'];
    }

    /**
     * Sets currentBidPrice
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $currentBidPrice currentBidPrice
     *
     * @return $this
     */
    public function setCurrentBidPrice($currentBidPrice)
    {
        $this->container['currentBidPrice'] = $currentBidPrice;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description The full description of the item that was created by the seller. This can be plain text or rich content.
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets enabledForGuestCheckout
     *
     * @return bool|null
     */
    public function getEnabledForGuestCheckout()
    {
        return $this->container['enabledForGuestCheckout'];
    }

    /**
     * Sets enabledForGuestCheckout
     *
     * @param bool|null $enabledForGuestCheckout Indicates if the item can be purchased using Guest Checkout in the Order API. You can use this flag to exclude items from your inventory that are not eligible for Guest Checkout, such as gift cards.
     *
     * @return $this
     */
    public function setEnabledForGuestCheckout($enabledForGuestCheckout)
    {
        $this->container['enabledForGuestCheckout'] = $enabledForGuestCheckout;

        return $this;
    }

    /**
     * Gets energyEfficiencyClass
     *
     * @return string|null
     */
    public function getEnergyEfficiencyClass()
    {
        return $this->container['energyEfficiencyClass'];
    }

    /**
     * Sets energyEfficiencyClass
     *
     * @param string|null $energyEfficiencyClass Indicates the European energy efficiency rating (EEK) of the item. This field is returned only if the seller specified the energy efficiency rating. The rating is a set of energy efficiency classes from A to G, where 'A' is the most energy efficient and 'G' is the least efficient. This rating helps buyers choose between various models. When the manufacturer's specifications for this item are available, the link to this information is returned in the productFicheWebUrl field.
     *
     * @return $this
     */
    public function setEnergyEfficiencyClass($energyEfficiencyClass)
    {
        $this->container['energyEfficiencyClass'] = $energyEfficiencyClass;

        return $this;
    }

    /**
     * Gets epid
     *
     * @return string|null
     */
    public function getEpid()
    {
        return $this->container['epid'];
    }

    /**
     * Sets epid
     *
     * @param string|null $epid An EPID is the eBay product identifier of a product from the eBay product catalog. This indicates the product in which the item belongs.
     *
     * @return $this
     */
    public function setEpid($epid)
    {
        $this->container['epid'] = $epid;

        return $this;
    }

    /**
     * Gets estimatedAvailabilities
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\EstimatedAvailability[]|null
     */
    public function getEstimatedAvailabilities()
    {
        return $this->container['estimatedAvailabilities'];
    }

    /**
     * Sets estimatedAvailabilities
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\EstimatedAvailability[]|null $estimatedAvailabilities The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.
     *
     * @return $this
     */
    public function setEstimatedAvailabilities($estimatedAvailabilities)
    {
        $this->container['estimatedAvailabilities'] = $estimatedAvailabilities;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender (Primary Item Aspect) The gender for the item. This is used for items that could vary by gender, such as clothing. For example: male, female, or unisex. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets gtin
     *
     * @return string|null
     */
    public function getGtin()
    {
        return $this->container['gtin'];
    }

    /**
     * Sets gtin
     *
     * @param string|null $gtin The unique Global Trade Item number of the item as defined by http://www.gtin.info. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.
     *
     * @return $this
     */
    public function setGtin($gtin)
    {
        $this->container['gtin'] = $gtin;

        return $this;
    }

    /**
     * Gets image
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Image|null
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Image|null $image image
     *
     * @return $this
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets itemAffiliateWebUrl
     *
     * @return string|null
     */
    public function getItemAffiliateWebUrl()
    {
        return $this->container['itemAffiliateWebUrl'];
    }

    /**
     * Sets itemAffiliateWebUrl
     *
     * @param string|null $itemAffiliateWebUrl The URL of the View Item page of the item, which includes the affiliate tracking ID. This field is only returned if the eBay partner enables affiliate tracking for the item by including the X-EBAY-C-ENDUSERCTX request header in the method.
     *
     * @return $this
     */
    public function setItemAffiliateWebUrl($itemAffiliateWebUrl)
    {
        $this->container['itemAffiliateWebUrl'] = $itemAffiliateWebUrl;

        return $this;
    }

    /**
     * Gets itemEndDate
     *
     * @return string|null
     */
    public function getItemEndDate()
    {
        return $this->container['itemEndDate'];
    }

    /**
     * Sets itemEndDate
     *
     * @param string|null $itemEndDate The date and time up to which the items can be purchased. This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer.
     *
     * @return $this
     */
    public function setItemEndDate($itemEndDate)
    {
        $this->container['itemEndDate'] = $itemEndDate;

        return $this;
    }

    /**
     * Gets itemId
     *
     * @return string|null
     */
    public function getItemId()
    {
        return $this->container['itemId'];
    }

    /**
     * Sets itemId
     *
     * @param string|null $itemId The unique RESTful identifier of the item.
     *
     * @return $this
     */
    public function setItemId($itemId)
    {
        $this->container['itemId'] = $itemId;

        return $this;
    }

    /**
     * Gets itemLocation
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Address|null
     */
    public function getItemLocation()
    {
        return $this->container['itemLocation'];
    }

    /**
     * Sets itemLocation
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Address|null $itemLocation itemLocation
     *
     * @return $this
     */
    public function setItemLocation($itemLocation)
    {
        $this->container['itemLocation'] = $itemLocation;

        return $this;
    }

    /**
     * Gets itemWebUrl
     *
     * @return string|null
     */
    public function getItemWebUrl()
    {
        return $this->container['itemWebUrl'];
    }

    /**
     * Sets itemWebUrl
     *
     * @param string|null $itemWebUrl The URL of the View Item page of the item. This enables you to include a &quot;Report Item on eBay&quot; link that takes the buyer to the View Item page on eBay. From there they can report any issues regarding this item to eBay.
     *
     * @return $this
     */
    public function setItemWebUrl($itemWebUrl)
    {
        $this->container['itemWebUrl'] = $itemWebUrl;

        return $this;
    }

    /**
     * Gets localizedAspects
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\TypedNameValue[]|null
     */
    public function getLocalizedAspects()
    {
        return $this->container['localizedAspects'];
    }

    /**
     * Sets localizedAspects
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\TypedNameValue[]|null $localizedAspects An array of containers for the complete list of the name/value pairs that describe the variation of the item.
     *
     * @return $this
     */
    public function setLocalizedAspects($localizedAspects)
    {
        $this->container['localizedAspects'] = $localizedAspects;

        return $this;
    }

    /**
     * Gets marketingPrice
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\MarketingPrice|null
     */
    public function getMarketingPrice()
    {
        return $this->container['marketingPrice'];
    }

    /**
     * Sets marketingPrice
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\MarketingPrice|null $marketingPrice marketingPrice
     *
     * @return $this
     */
    public function setMarketingPrice($marketingPrice)
    {
        $this->container['marketingPrice'] = $marketingPrice;

        return $this;
    }

    /**
     * Gets material
     *
     * @return string|null
     */
    public function getMaterial()
    {
        return $this->container['material'];
    }

    /**
     * Sets material
     *
     * @param string|null $material (Primary Item Aspect) Text describing what the item is made of. For example, silk. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setMaterial($material)
    {
        $this->container['material'] = $material;

        return $this;
    }

    /**
     * Gets minimumPriceToBid
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getMinimumPriceToBid()
    {
        return $this->container['minimumPriceToBid'];
    }

    /**
     * Sets minimumPriceToBid
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $minimumPriceToBid minimumPriceToBid
     *
     * @return $this
     */
    public function setMinimumPriceToBid($minimumPriceToBid)
    {
        $this->container['minimumPriceToBid'] = $minimumPriceToBid;

        return $this;
    }

    /**
     * Gets mpn
     *
     * @return string|null
     */
    public function getMpn()
    {
        return $this->container['mpn'];
    }

    /**
     * Sets mpn
     *
     * @param string|null $mpn The manufacturer's part number, which is a unique number that identifies a specific product. To identify the product, this is always used along with brand.
     *
     * @return $this
     */
    public function setMpn($mpn)
    {
        $this->container['mpn'] = $mpn;

        return $this;
    }

    /**
     * Gets pattern
     *
     * @return string|null
     */
    public function getPattern()
    {
        return $this->container['pattern'];
    }

    /**
     * Sets pattern
     *
     * @param string|null $pattern (Primary Item Aspect) Text describing the pattern used on the item. For example, paisley. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setPattern($pattern)
    {
        $this->container['pattern'] = $pattern;

        return $this;
    }

    /**
     * Gets price
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceDisplayCondition
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\PriceDisplayConditionEnum|null
     */
    public function getPriceDisplayCondition()
    {
        return $this->container['priceDisplayCondition'];
    }

    /**
     * Sets priceDisplayCondition
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\PriceDisplayConditionEnum|null $priceDisplayCondition priceDisplayCondition
     *
     * @return $this
     */
    public function setPriceDisplayCondition($priceDisplayCondition)
    {
        $this->container['priceDisplayCondition'] = $priceDisplayCondition;

        return $this;
    }

    /**
     * Gets primaryItemGroup
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ItemGroupSummary|null
     */
    public function getPrimaryItemGroup()
    {
        return $this->container['primaryItemGroup'];
    }

    /**
     * Sets primaryItemGroup
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ItemGroupSummary|null $primaryItemGroup primaryItemGroup
     *
     * @return $this
     */
    public function setPrimaryItemGroup($primaryItemGroup)
    {
        $this->container['primaryItemGroup'] = $primaryItemGroup;

        return $this;
    }

    /**
     * Gets primaryProductReviewRating
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ReviewRating|null
     */
    public function getPrimaryProductReviewRating()
    {
        return $this->container['primaryProductReviewRating'];
    }

    /**
     * Sets primaryProductReviewRating
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ReviewRating|null $primaryProductReviewRating primaryProductReviewRating
     *
     * @return $this
     */
    public function setPrimaryProductReviewRating($primaryProductReviewRating)
    {
        $this->container['primaryProductReviewRating'] = $primaryProductReviewRating;

        return $this;
    }

    /**
     * Gets product
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Product|null
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Product|null $product product
     *
     * @return $this
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets productFicheWebUrl
     *
     * @return string|null
     */
    public function getProductFicheWebUrl()
    {
        return $this->container['productFicheWebUrl'];
    }

    /**
     * Sets productFicheWebUrl
     *
     * @param string|null $productFicheWebUrl The URL of a page containing the manufacturer's specification of this item, which helps buyers make a purchasing decision. This information is available only for items that include the European energy efficiency rating (EEK) but is not available for all items with an EEK rating. This field is returned only if this information is available. The EEK rating of the item is returned in the energyEfficiencyClass field.
     *
     * @return $this
     */
    public function setProductFicheWebUrl($productFicheWebUrl)
    {
        $this->container['productFicheWebUrl'] = $productFicheWebUrl;

        return $this;
    }

    /**
     * Gets quantityLimitPerBuyer
     *
     * @return int|null
     */
    public function getQuantityLimitPerBuyer()
    {
        return $this->container['quantityLimitPerBuyer'];
    }

    /**
     * Sets quantityLimitPerBuyer
     *
     * @param int|null $quantityLimitPerBuyer The maximum number for a specific item that one buyer can purchase.
     *
     * @return $this
     */
    public function setQuantityLimitPerBuyer($quantityLimitPerBuyer)
    {
        $this->container['quantityLimitPerBuyer'] = $quantityLimitPerBuyer;

        return $this;
    }

    /**
     * Gets reservePriceMet
     *
     * @return bool|null
     */
    public function getReservePriceMet()
    {
        return $this->container['reservePriceMet'];
    }

    /**
     * Sets reservePriceMet
     *
     * @param bool|null $reservePriceMet This indicates if the reserve price of the item has been met. A reserve price is set by the seller and is the minimum amount the seller is willing to sell the item for. If the highest bid is not equal to or higher than the reserve price when the auction ends, the listing ends and the item is not sold. Note: This is returned only for auctions that have a reserve price.
     *
     * @return $this
     */
    public function setReservePriceMet($reservePriceMet)
    {
        $this->container['reservePriceMet'] = $reservePriceMet;

        return $this;
    }

    /**
     * Gets returnTerms
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ItemReturnTerms|null
     */
    public function getReturnTerms()
    {
        return $this->container['returnTerms'];
    }

    /**
     * Sets returnTerms
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ItemReturnTerms|null $returnTerms returnTerms
     *
     * @return $this
     */
    public function setReturnTerms($returnTerms)
    {
        $this->container['returnTerms'] = $returnTerms;

        return $this;
    }

    /**
     * Gets seller
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\SellerDetail|null
     */
    public function getSeller()
    {
        return $this->container['seller'];
    }

    /**
     * Sets seller
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\SellerDetail|null $seller seller
     *
     * @return $this
     */
    public function setSeller($seller)
    {
        $this->container['seller'] = $seller;

        return $this;
    }

    /**
     * Gets sellerItemRevision
     *
     * @return string|null
     */
    public function getSellerItemRevision()
    {
        return $this->container['sellerItemRevision'];
    }

    /**
     * Sets sellerItemRevision
     *
     * @param string|null $sellerItemRevision An identifier generated/incremented when a seller revises the item. There are two types of item revisions; seller changes, such as changing the title, and eBay system changes, such as changing the quantity when an item is purchased. This ID is changed only when the seller makes a change to the item. This means you cannot use this value to determine if the quantity has changed.
     *
     * @return $this
     */
    public function setSellerItemRevision($sellerItemRevision)
    {
        $this->container['sellerItemRevision'] = $sellerItemRevision;

        return $this;
    }

    /**
     * Gets shippingOptions
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ShippingOption[]|null
     */
    public function getShippingOptions()
    {
        return $this->container['shippingOptions'];
    }

    /**
     * Sets shippingOptions
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ShippingOption[]|null $shippingOptions An array of shipping options containers that have the details about cost, carrier, etc. of one shipping option.
     *
     * @return $this
     */
    public function setShippingOptions($shippingOptions)
    {
        $this->container['shippingOptions'] = $shippingOptions;

        return $this;
    }

    /**
     * Gets shipToLocations
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ShipToLocations|null
     */
    public function getShipToLocations()
    {
        return $this->container['shipToLocations'];
    }

    /**
     * Sets shipToLocations
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ShipToLocations|null $shipToLocations shipToLocations
     *
     * @return $this
     */
    public function setShipToLocations($shipToLocations)
    {
        $this->container['shipToLocations'] = $shipToLocations;

        return $this;
    }

    /**
     * Gets shortDescription
     *
     * @return string|null
     */
    public function getShortDescription()
    {
        return $this->container['shortDescription'];
    }

    /**
     * Sets shortDescription
     *
     * @param string|null $shortDescription This text string is derived from the item condition and the item aspects (such as size, color, capacity, model, brand, etc.).
     *
     * @return $this
     */
    public function setShortDescription($shortDescription)
    {
        $this->container['shortDescription'] = $shortDescription;

        return $this;
    }

    /**
     * Gets size
     *
     * @return string|null
     */
    public function getSize()
    {
        return $this->container['size'];
    }

    /**
     * Sets size
     *
     * @param string|null $size (Primary Item Aspect) The size of the item. For example, '7' for a size 7 shoe. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setSize($size)
    {
        $this->container['size'] = $size;

        return $this;
    }

    /**
     * Gets sizeSystem
     *
     * @return string|null
     */
    public function getSizeSystem()
    {
        return $this->container['sizeSystem'];
    }

    /**
     * Sets sizeSystem
     *
     * @param string|null $sizeSystem (Primary Item Aspect) The sizing system of the country. All the item aspects, including this aspect, are returned in the localizedAspects container. Valid Values: &nbsp;&nbsp;US &nbsp;&nbsp;UK &nbsp;&nbsp;EU &nbsp;&nbsp;DE &nbsp;&nbsp;FR &nbsp;&nbsp;JP &nbsp;&nbsp;CN (China) &nbsp;&nbsp;IT &nbsp;&nbsp;BR &nbsp;&nbsp;MEX &nbsp;&nbsp;AU Code so that your app gracefully handles any future changes to this list.
     *
     * @return $this
     */
    public function setSizeSystem($sizeSystem)
    {
        $this->container['sizeSystem'] = $sizeSystem;

        return $this;
    }

    /**
     * Gets sizeType
     *
     * @return string|null
     */
    public function getSizeType()
    {
        return $this->container['sizeType'];
    }

    /**
     * Sets sizeType
     *
     * @param string|null $sizeType (Primary Item Aspect) Text describing a size group in which the item would be included, such as regular, petite, plus, big-and-tall or maternity. All the item aspects, including this aspect, are returned in the localizedAspects container.
     *
     * @return $this
     */
    public function setSizeType($sizeType)
    {
        $this->container['sizeType'] = $sizeType;

        return $this;
    }

    /**
     * Gets subtitle
     *
     * @return string|null
     */
    public function getSubtitle()
    {
        return $this->container['subtitle'];
    }

    /**
     * Sets subtitle
     *
     * @param string|null $subtitle An additional shorten title for the item that is created by the seller.
     *
     * @return $this
     */
    public function setSubtitle($subtitle)
    {
        $this->container['subtitle'] = $subtitle;

        return $this;
    }

    /**
     * Gets taxes
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\Taxes[]|null
     */
    public function getTaxes()
    {
        return $this->container['taxes'];
    }

    /**
     * Sets taxes
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\Taxes[]|null $taxes The container for the tax information for the item.
     *
     * @return $this
     */
    public function setTaxes($taxes)
    {
        $this->container['taxes'] = $taxes;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title The seller-created title of the item. Maximum Length: 80 characters
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets topRatedBuyingExperience
     *
     * @return bool|null
     */
    public function getTopRatedBuyingExperience()
    {
        return $this->container['topRatedBuyingExperience'];
    }

    /**
     * Sets topRatedBuyingExperience
     *
     * @param bool|null $topRatedBuyingExperience Indicates if the item a top-rated plus item. There are three benefits of a top-rated plus item; a minimum 30-day money-back return policy, shipping the items in 1 business day with tracking provided, and the added comfort of knowing this item is from experienced sellers with the highest buyer ratings. See the Top Rated Plus Items and Becoming a Top Rated Seller and qualifying for Top Rated Plus help topics for more information.
     *
     * @return $this
     */
    public function setTopRatedBuyingExperience($topRatedBuyingExperience)
    {
        $this->container['topRatedBuyingExperience'] = $topRatedBuyingExperience;

        return $this;
    }

    /**
     * Gets uniqueBidderCount
     *
     * @return int|null
     */
    public function getUniqueBidderCount()
    {
        return $this->container['uniqueBidderCount'];
    }

    /**
     * Sets uniqueBidderCount
     *
     * @param int|null $uniqueBidderCount This integer value indicates the number of different eBay users who have placed one or more bids on an auction item. This field is only applicable to auction items.
     *
     * @return $this
     */
    public function setUniqueBidderCount($uniqueBidderCount)
    {
        $this->container['uniqueBidderCount'] = $uniqueBidderCount;

        return $this;
    }

    /**
     * Gets unitPrice
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null
     */
    public function getUnitPrice()
    {
        return $this->container['unitPrice'];
    }

    /**
     * Sets unitPrice
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ConvertedAmount|null $unitPrice unitPrice
     *
     * @return $this
     */
    public function setUnitPrice($unitPrice)
    {
        $this->container['unitPrice'] = $unitPrice;

        return $this;
    }

    /**
     * Gets unitPricingMeasure
     *
     * @return string|null
     */
    public function getUnitPricingMeasure()
    {
        return $this->container['unitPricingMeasure'];
    }

    /**
     * Sets unitPricingMeasure
     *
     * @param string|null $unitPricingMeasure The designation, such as size, weight, volume, count, etc., that was used to specify the quantity of the item. This helps buyers compare prices. For example, the following tells the buyer that the item is 7.99 per 100 grams. &quot;unitPricingMeasure&quot;: &quot;100g&quot;, &quot;unitPrice&quot;: { &nbsp;&nbsp;&quot;value&quot;: &quot;7.99&quot;, &nbsp;&nbsp;&quot;currency&quot;: &quot;GBP&quot;
     *
     * @return $this
     */
    public function setUnitPricingMeasure($unitPricingMeasure)
    {
        $this->container['unitPricingMeasure'] = $unitPricingMeasure;

        return $this;
    }

    /**
     * Gets warnings
     *
     * @return \macropage\SDKs\ebay\rest\browse\Model\ErrorDetailV3[]|null
     */
    public function getWarnings()
    {
        return $this->container['warnings'];
    }

    /**
     * Sets warnings
     *
     * @param \macropage\SDKs\ebay\rest\browse\Model\ErrorDetailV3[]|null $warnings An array of warning messages. These type of errors do not prevent the method from executing but should be checked.
     *
     * @return $this
     */
    public function setWarnings($warnings)
    {
        $this->container['warnings'] = $warnings;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


